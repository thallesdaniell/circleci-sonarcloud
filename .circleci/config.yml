# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details

version: 2.1
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4.1

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo apt-get install -y zip autoconf
      - run: sudo ln -s /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini
      - run: sudo bash -c 'echo "memory_limit = -1" > /usr/local/etc/php/conf.d/docker-php-memlimit.ini'
      - run: sudo apt-get install -y libcurl4-openssl-dev pkg-config libssl-dev

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: |
          mkdir -p database
          touch database/database.sqlite
      # prepare the database
      - run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
      - run: php artisan key:generate
      - run: php artisan cache:clear
      - run: php artisan config:clear
      - run: php artisan migrate
      # run tests with phpunit or codecept
      - run: php artisan test
      - store_test_results:
          path: ./tests/reports
      - store_artifacts:
          path: ./tests/reports
#      - sonarcloud/scan

#orbs:
#  sonarcloud: sonarsource/sonarcloud@1.0.1
#
#workflows:
#  main:
#    jobs:
#      - build:
#          context: SonarCloud

